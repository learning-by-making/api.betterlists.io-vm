---
#
# http://hanamirb.org/guides/getting-started/
# https://rvm.io/workflow/projects
# NOTE: rvm isn't loaded as a function
# https://rvm.io/workflow/scripting
# http://docs.ansible.com/ansible/stat_module.html
# http://docs.ansible.com/ansible/playbooks_filters.html
# http://jinja.pocoo.org/docs/dev/templates
# http://docs.ansible.com/ansible/postgresql_privs_module.html
#

#- name: RVM - test
#  shell: type rvm | head -1
#  register: test
#  # Print the shell task's stdout.
#- debug: msg={{ test.stdout }}
#  # Print all contents of the shell task's output.
#- debug: var=test

- name: Install Hanami
  shell: rvm {{ ruby_version }}@{{ app_name }} do gem install hanami

- name: Application bootstrap
  shell: rvm {{ ruby_version }}@{{ app_name }} do hanami new . --application_name=api --db=postgresql --test=rspec
  args:
    chdir: ~/{{ app_name }}
    creates: Gemfile

- name: Install gems
  shell: rvm {{ ruby_version }}@{{ app_name }} do bundle install
  args:
    chdir: ~/{{ app_name }}

- name: Configure db connection
  lineinfile:
    dest: ~/{{ app_name }}/.env.development
    regexp: '^(.*)_DATABASE_URL='
    line: '\1_DATABASE_URL="postgres://{{ api_db_user }}:{{ api_db_password }}@127.0.0.1/{{ app_name }}_development"'
    backrefs: yes

# http://stackoverflow.com/a/16783253
- name: check db exists
  shell: export PGPASSWORD='{{ api_db_password }}'; psql -U {{ api_db_user }} -h 127.0.0.1 -lqt | cut -d \| -f 1 | grep -qw {{ app_name }}_development
  ignore_errors: yes
  register: db_exists
#- debug: msg={{ db_exists }}

- name: Create db
  shell: rvm {{ ruby_version }}@{{ app_name }} do hanami db create
  args:
    chdir: ~/{{ app_name }}
  when: db_exists.rc

# if db already exists add privileges (needed if 'api_db_user' was changed in some environment variable's files after creating db)
- postgresql_privs: >
    login={{ postgres_user }}
    password={{ postgres_password }}
    host=127.0.0.1
    db={{ app_name }}_development
    privs=ALL
    type=database
    role={{ api_db_user }}
  when: not (db_exists.rc)

- name: Run migrations
  shell: rvm {{ ruby_version }}@{{ app_name }} do hanami db migrate
  args:
    chdir: ~/{{ app_name }}
